from typing import List, Any, Optional, Union
from pydantic import BaseModel, Field
from . import action_store as action_store
from ..http_wrapper import *
from datetime import datetime


class ProjectsIdVulnerabilityfindings(BaseModel):
    id: int  # The ID or URL-encoded path of the project which the authenticated user is a member of.

    report_type: Optional[List[str]] = None  # Returns vulnerability findings belonging to specified report type. Valid values: sast, dast, dependency_scanning, or container_scanning. Defaults to all.

    scope: Optional[str] = None  # Returns vulnerability findings for the given scope: all or dismissed. Defaults to dismissed.

    severity: Optional[List[str]] = None  # Returns vulnerability findings belonging to specified severity level: info, unknown, low, medium, high, or critical. Defaults to all.

    confidence: Optional[List[str]] = None  # Returns vulnerability findings belonging to specified confidence level: ignore, unknown, experimental, low, medium, high, or confirmed. Defaults to all.

    pipeline_id: int  # Returns vulnerability findings belonging to specified pipeline.


@action_store.kubiya_action()
def list_project_vulnerability_findings(input: ProjectsIdVulnerabilityfindings):
    return get_wrapper(endpoint=f"/projects/{input.id}/vulnerability_findings", args=input.dict(exclude_none=True))
