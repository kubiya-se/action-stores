from typing import List, Any, Optional, Union
from pydantic import BaseModel, Field
from . import action_store as action_store
from ..http_wrapper import *
from datetime import datetime
from modeltest.vulnerability_export import *
@action_store.kubiya_action()
def create_a_project_level_vulnerability_export(input: SecurityProjectsIdVulnerabilityexports):
    return post_wrapper(endpoint=f'/security/projects/{input.id}/vulnerability_exports', args=input.dict(exclude_none=True))
@action_store.kubiya_action()
def create_a_group_level_vulnerability_export(input: SecurityGroupsIdVulnerabilityexports):
    return post_wrapper(endpoint=f'/security/groups/{input.id}/vulnerability_exports', args=input.dict(exclude_none=True))
@action_store.kubiya_action()
def create_an_instance_level_vulnerability_export(input=None):
    return post_wrapper(endpoint=f'/security/vulnerability_exports', args=input)
@action_store.kubiya_action()
def get_single_vulnerability_export(input: SecurityVulnerabilityexportsId):
    return get_wrapper(endpoint=f'/security/vulnerability_exports/{input.id}', args=input.dict(exclude_none=True))
@action_store.kubiya_action()
def download_vulnerability_export(input: SecurityVulnerabilityexportsIdDownload):
    return get_wrapper(endpoint=f'/security/vulnerability_exports/{input.id}/download', args=input.dict(exclude_none=True))